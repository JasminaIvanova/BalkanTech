@using BalkanTech.Web.ViewModels;
@model PaginationIndexViewModel<BalkanTech.Data.Models.MaintananceTask>
@if (Model.TotalItems > 0)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Task", new {
                        roomId = ViewData["RoomId"],
                        roomNumber = ViewData["RoomNumber"],
                        category = ViewData["Category"],
                        completedPage = (ViewData["IsCompleted"] as bool? == true ? 1 : ViewData["CompletedPage"]),
                        toBeCompletedPage = (ViewData["IsCompleted"] as bool? != true ? 1 : ViewData["ToBeCompletedPage"]),
                        pageSize = Model.PageSize
                    })">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Task", new {
                        roomId = ViewData["RoomId"],
                        roomNumber = ViewData["RoomNumber"],
                        category = ViewData["Category"],
                        completedPage = (ViewData["IsCompleted"] as bool? == true ? Model.CurrentPage - 1 : ViewData["CompletedPage"]),
                        toBeCompletedPage = (ViewData["IsCompleted"] as bool? != true ? Model.CurrentPage - 1 : ViewData["ToBeCompletedPage"]),
                        pageSize = Model.PageSize
                    })">Previous</a>
                </li>
            }
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Task", new {
                        roomId = ViewData["RoomId"],
                        roomNumber = ViewData["RoomNumber"],
                        category = ViewData["Category"],
                        completedPage = (ViewData["IsCompleted"] as bool? == true ? i : ViewData["CompletedPage"]),
                        toBeCompletedPage = (ViewData["IsCompleted"] as bool? != true ? i : ViewData["ToBeCompletedPage"]),
                        pageSize = Model.PageSize
                    })">@i</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Task", new {
                        roomId = ViewData["RoomId"],
                        roomNumber = ViewData["RoomNumber"],
                        category = ViewData["Category"],
                        completedPage = (ViewData["IsCompleted"] as bool? == true ? Model.CurrentPage + 1 : ViewData["CompletedPage"]),
                        toBeCompletedPage = (ViewData["IsCompleted"] as bool? != true ? Model.CurrentPage + 1 : ViewData["ToBeCompletedPage"]),
                        pageSize = Model.PageSize
                    })">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Task", new {
                        roomId = ViewData["RoomId"],
                        roomNumber = ViewData["RoomNumber"],
                        category = ViewData["Category"],
                        completedPage = (ViewData["IsCompleted"] as bool? == true ? Model.TotalPages : ViewData["CompletedPage"]),
                        toBeCompletedPage = (ViewData["IsCompleted"] as bool? != true ? Model.TotalPages : ViewData["ToBeCompletedPage"]),
                        pageSize = Model.PageSize
                    })">Last</a>
                </li>
            }
        </ul>
    </nav>
}


