@using BalkanTech.Web.ViewModels.Room
@model RoomsIndexPagedModel<RoomsIndexViewModel>
@using static BalkanTech.Common.ErrorMessages.Rooms

@{
    ViewData["Title"] = "Room List";
}

@if (TempData[nameof(AddRoomsErrorMessage)] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @TempData[nameof(AddRoomsErrorMessage)]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData[nameof(NoResultFound)] != null)
{
    <div class="alert alert-info alert-dismissible fade show mt-3" role="alert">
        @TempData[nameof(NoResultFound)]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData[nameof(ErrorRoomNumber)] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @TempData[nameof(ErrorRoomNumber)]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h1 class="mt-3" style="text-align: center">Rooms List</h1>

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        @if (User.IsInRole("Admin"))
        {
            <a href="@Url.Action("Add", "Room")" class="btn btn-info">Add Room</a>
         }
        <div class="ms-auto">
            <form class="d-flex">
                <input type="text" name="search" class="form-control me-sm-2" placeholder="Search" value="@ViewBag.SearchQuery">
                <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </div>

    <div class="row">
        @foreach (var room in Model.Items)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Room Number: @room.RoomNumber</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Floor: @room.Floor</h6>
                        <p class="card-text">@room.RoomCategory</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="card-text mb-0">@room.isAvailable</p>
                            <a href="@Url.Action("Index", "Task", new
                            {
                                roomId = room.Id,
                                roomNumber = room.RoomNumber
                            }
                            )" class="btn btn-primary btn-sm">View Tasks</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })">Last</a>
            </li>
            }
        </ul>
    </nav>
</div>